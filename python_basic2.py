# -*- coding: utf-8 -*-
"""dictionary_set_controlStatement

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A5VuqyxCL7j6geuzOSKTdWexfdWo5wun

1. 파이썬 자료형 - 딕셔너리
"""

## dictionary 사용법
name_to_age = {"Jenny": 20, "Ella":31}
name_to_age["John"] = 26
name_to_age["Tom"] = 29
# print(name_to_age)
# print(name_to_age["Jenny"])
# print(name_to_age["John"])
# print(name_to_age["Tom"])

# name_to_age["Jenny"] = 21
# print(name_to_age)
# print(name_to_age["Jenny"])
# print(name_to_age.get("Jenny"))
print(name_to_age.keys())

# for name in name_to_age.keys(): #name_to_age.keys() -> 리스트 형식으로 사용. 
#for name in ['Jenny', 'Ella', 'John', 'Tom']
    # print(name)
    # print(name, name_to_age[name])

for i, name in enumerate(name_to_age.keys()): #각 key의 index 값들을 반환해준다.
    print(i, name, name_to_age[name])

print("Andrew" in name_to_age) #name_to_age에 "Andrew"가 있는지 논리값을 반환해준다. 
print("Ella" in name_to_age)

"""2. 파이썬 자료형 - 집합(set)"""

# ### 집합(set) 사용법 -> 어떤 데이터 셋의 중복값을 제거하고, 중복값을 제거하기 전과 길이를 비교해서 중복값이 잘 제거되었는지 확인해볼 수 있다.
s1 = set("Hello")
print(s1)

s2 = set([1, 1, 2, 2, 3, 4, 5])
print(s2)

"""3. 파이썬 함수"""

## function 사용법
def sum(a, b):
    s = a + b
    return s

print(sum(3, 5))
print(sum(2, 1))


def sum_and_mul(a, b):
    return a + b, a*b

s, m = sum_and_mul(3, 5)
print(s)
print(m)

print(sum_and_mul(3, 5))
print(sum_and_mul(2, 1))

"""4. 파이썬 제어문 if"""

### if 기본
man = False

if man:
    print("남자화장실로 가세요")
else:
    print("여자 화장실로 가세요")

minimum = 165
height = 165

### 대소 관계를 이용한 if 문 활용 
if height < minimum:
    print("탑승하실수 없습니다")
else:
    print("탑승하세요")

### 이상, 이하 활용 
if height <= minimum:
    print("탑승하실수 없습니다")
else:
    print("탑승하세요")

blood_type = "A"
emergency_patient = "A"

###  equal(같음) 연산자 활용
if blood_type == emergency_patient:
    print("수혈해 주세요")
else:
    print("수혈해 주실 수 없습니다")

minimum = 165
maximum = 195
height = 180

### if 문 속 연속 조건 활용 (and, or)
if height < minimum or height > maximum:
    print("탑승하실 수 없습니다")
else:
    print("탑승하세요")

blood_type1 = "A"
emergency_patient_type1 = "A"
blood_type2 = "RH+"
emergency_patient_type2 = "RH+"

### if 문 속 연속 조건 활용 (and, or)
if blood_type1 == emergency_patient_type1 and blood_type2 == emergency_patient_type2:
    print("수혈해 주세요")
else:
    print("수혈해 주실 수 없습니다")

basic = 40
intermediate = 70
advanced = 100

score = 80

### 3개 이상의 조건이 필요하다면 : elif <-- else if 
if score <= basic:
    print("초급반을 수강하세요")
elif score <= intermediate:
    print("중급반을 수강하세요")
elif score <= advanced:
    print("고급반을 수강하세요")
else:
    print("점수를 확인해주세요")

"""5. 파이썬 제어문 for """

marks = [90, 25, 67, 45, 80]
        # 1.  2.  3.  4.  5 
number = 0
### 기본 for문 사용
for mark in marks:
    number = number + 1
    if mark >= 60:
        print("{}번 학생은 {sex}합격입니다.".format(number,sex="여성"))
    else:
        print(f"{number}번 학생은 불합격입니다.")

### continue 활용하기 
marks = [90, 25, 67, 45, 80]

number = 0
for mark in marks:
    number = number +1
    if mark < 60:
        ### loop과정 중 다음으로 바로 넘어가기 : continue
        continue
    print("%d번 학생 축하합니다. 합격입니다. " % number)

### 1부터 10까지 프린트 하기 
for i in range(10): #0부터 10개의 숫자를 입력해줘라. 
    print(i+1)

# ### 1부터 10까지 더하기 
sum = 0
for i in range(1, 11):
  sum += i # 1 + 2 + 3 + ... + 10 
print(sum)

### 이중 for문 
for i in range(2,10):
    for j in range(1, 10):
        print(i*j, end=" ")
    print('')