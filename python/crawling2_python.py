# -*- coding: utf-8 -*-
"""crawling2_python

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zGq4_rKly-85mGylX9ga9iOYAWGi0C8c
"""

#웹 크롤링

import urllib.request 
from bs4 import BeautifulSoup

url = "https://www.imdb.com/title/tt4154796/reviews?ref_=tt_ov_rt"
htmlData = urllib.request.urlopen(url) #해당 url에 있는 page에 있는 element를 가지고 온다. 모두 string 형태로 가지고 온다. 
#그래서 분석에 활용할 수는 없다. -> 이 때, BeautifulSoup package 사용. 
# print(htmlData.readlines())
bs = BeautifulSoup(htmlData, 'lxml') #BeautifulSoup(텍스트 정보, 변경하고자 하는 구조)
print(BeautifulSoup.prettify(bs))

htmlData.readlines() #string 형태로 뽑아낸다.

#title 뽑아내기 
title_list = bs.findAll('a', 'title') #'a'라는 태그안에 'title'이라는 클래스가 있는데 이를 이용해서 title만을 뽑아온다. findAll 함수를 사용해서 
print(title_list) #list의 형태로 들어있다.

for title in title_list:
    print(title.getText()) #Text 내용만 뽑을 때 getText 함수 사용.

#contents 내용 뽑아내기 
review_list = bs.findAll('div', 'text show-more__control')

for content in review_list:
    print(content.getText()+"\n") #getText(): text만 뽑아오기.

review_list[0] #bs4 안에 있는 list의 형태이다.

score_list = bs.findAll('span', 'rating-other-user-rating')

for score in score_list:
    print(score.span.getText()) #score 안에 span에 접근해서 text를 뽑아옴. 이렇게 클래스가 없을 경우, 그 클래스가 포함되어 있는 상위를 뽑아와서 우리가 원하는 값을 차례로 뽑아내면 된다.

import re #regular expression: 정규표현식, 글 안에 어떠한 원하는 형태로 바꿔주는 기능을 가진 패키지.

def clean_str(string):
    string = re.sub(r"[^A-Za-z0-9(),!?\'\`]", " ", string)
    string = re.sub(r"\'s", " \'s", string)
    string = re.sub(r"\'ve", " \'ve", string)   
    string = re.sub(r"n\'t", " n\'t", string)
    string = re.sub(r"\'re", " \'re", string)
    string = re.sub(r"\'d", " \'d", string)
    string = re.sub(r"\'ll", " \'ll", string)
    string = re.sub(r",", " , ", string)
    string = re.sub(r"!", " ! ", string)
    string = re.sub(r"\(", " \( ", string)
    string = re.sub(r"\)", " \) ", string)
    string = re.sub(r"\?", " \? ", string)
    string = re.sub(r"\s{2,}", " ", string)
    return string.strip().lower() #strip() -> 좌우 공백 없애준다.

print(len(title_list))

with open('./review.txt', 'w', encoding='UTF-8') as f: #encoding -> 어떤 식으로 파일을 쓸건지? 정해주는 것. 어떠한 형태로 저장해.
    for i in range(len(title_list)):
        line = clean_str(title_list[i].getText()) +"************"+ clean_str(review_list[i].getText())+"\n"
        f.write(line)

with open('./score.txt', 'w', encoding='UTF-8') as f:
    for i in range(len(score_list)):
        line = score_list[i].span.getText()+"\n"
        f.write(line) #database화 됨. 파일로 만들었음.

