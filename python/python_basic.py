# -*- coding: utf-8 -*-
"""python basic

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10CMew2BdBwu1xpvQNnid78-YRCjhcIHG
"""

# 참고 
# : 주석 처리 
# 이 있는 오른쪽 코드는 컴퓨터가 무시합니다.
# 주로 코드 설명을 위해 사용합니다.

"""## 1. 파이썬 자료형 - 숫자"""

a = 3
print(a)

b = 2
print(b)

c = 0
print(c)

a = -12
print(a)

"""## 실수형 (float) 정수 : int """

b = 3.4
print(b)

a = -2.5
print(a)

a = 3.5e-3
print(a) # 0.0035

a = 2e+3
print(a) # 2000

"""## 형 변환 float -> int"""

a = 3.7
print(a)

b = int(a)
print(b)

# int -> float 
print(float(b))

### type()
print(type(a))# float
print(type(b)) # int

"""## 사칙연산"""

a = 3
b = 5
c = a + b # 8
print(a + b)
print(c)
print(a - b)
print(a*b)
print(a/b)
print(a//b)

a = 3.0
print(a + b)

"""## 제곱, 나머지, 몫"""

a = 5
b = 2

print(a**b)
print(a%b)
print(a//b)

"""## 2. 파이썬 자료형 - 문자열"""

print("Hello World")
print('Hello World')
print("a")
print('123', end=" ")
print('456')

"""## 문자열에서 "와 '의 활용 """

c = "Tom's paper"
print(c)

d = 'He said "Hi"'
print(d)

c = 'Tom\'s paper'
print(c)

d = "He said \"Hi\""
print(d)

"""## multiline"""

multiline = "Life is too short\nYou need python"
print(multiline)

multiline = """
Life is too short
You need python
"""
print(multiline)

multiline = '''
Life is too short
You need python
'''
print(multiline)

"""## 문자열 연산, 인덱싱, 슬라이싱 """

teacher = "Chung's "
title = "AI School"
print(teacher + title)
print("="*30)

print(len(title))

print(title[0])
print(title[-1])
print(title[:2])
print(title[3:])

odd_even = "홀짝홀짝홀짝"
print(odd_even[::2])
print(odd_even[1::2])

"""## 문자열 관련 함수 
### count(), find(), index(), join(), upper(), lower()
"""

a = "apple"
print(a.count("p"))
print(a.find("p"))
print(a.index("p"))
print(".".join(a))

a = a.upper() #대문자로 변환
print(a)
print(a.lower())#소문자로 변환

num = "234"
print(type(num))
print(num)
num = float(num) # int -> float
print(type(num))
print(num)
num = str(num) # str(234.0)
print(type(num))
print(num)

"""## 문자열 관련 함수 
### strip(), replace(), split()
"""

b = " ?How can I improve my coding skills? "
print(b)

b = b.strip() #앞 뒤의 공백을 삭제해준다. 
print(b)

b = b.replace("?", "\"") #?->""로 대체 
print(b)

word_list = b.split(" ") #공백을 기준으로 쪼개라
print(word_list)

"""## 문자열 포멧팅 
### %, format(), f"   {변수명}", %0.f
"""

apple1_num = 5
apple_num = 4
orange_num = 2
apple_num_string = "three"

print("I eat %d apples." % apple_num)
print("I eat {0} apples.".format(apple_num))
print("I eat %s apples." % apple_num_string)
print("I eat %d apples and %d oranges." % (apple_num, orange_num))
print("I eat {0} or {1} apples and {2} oranges.".format(apple1_num,apple_num, orange_num))
print("I eat {apple_num} apples and {orange_num} oranges.".format(apple_num=1, orange_num=2))

print("Error is %d%%." % 98)
print(f"I eat {apple_num} apples.") #f를 문자열앞에 명시함으로써, {}안에 변수가 출력된다.

pi = 3.141592
print("pi = %f" % pi)
print("pi = %0.4f" % pi) #소수점 4째자리 까지 보여줘

"""## 3. 파이썬 자료형 - 리스트"""

a = [1, 2, 3, 4, 5]
print(a)
print(len(a))

b = ["a", "b", "c", "d"]
print(b)
print(len(b))

c = [1, "a", 2.5]
print(c)
print(len(c))

d = [1, 2, [3, 4, 5]]
print(d)
print(len(d))
print(len(d[2]))
print(d[2][0:3])

"""## 리스트 인덱싱과 슬라이싱"""

a = [1, 2, 3, 4, 5]
b = ["a", "b", "c", "d"]
print(a[0])
print(a[1])
print(a[-1])
print(a[0:2])
print(a[:2])
print(a[2:])
print(a+b)
print(a*3)
print(len(a))

d = [1, 2, [3, 4, 5]]
print(d[2][:2])

"""## 리스트 관련 함수
### index(), del, append(), count()
"""

a = [1, 2, 3, 4, 5]
print(a)

a[2] = 6
print(a)  
print(a.index(4))

del a[2]
print(a)
# a = [1, 2, 4, 5]
#      0  1  2  3 

del a[2:]
print(a)
# a = [1, 2] <-- 2 
# a = [1, 2, 2]

a.append(2)
print(a)
# a = [1, 2, 2]
print(a.count(2))
# a = [1, 2, 2]
print(max(a))
print(min(a))


print(sum(a))

"""## 리스트 관련 함수 
### sorted(), sort(), reverse(), insert(), remove(), pop(), extend(), append()
"""

a = [2, 1, 5, 4, 3]
print("(1)",a)

b = sorted(a) #sorted 함수: 리스트를 인수로 받아서 정렬해서 새로운 변수 b에 넣어준다. 
print("(2)",b)
print("(3)",a) #sorted 함수를 사용해서 정렬한 값이 반환은 된다. 하지만 정렬되는 그 변수 자체는 정렬되지 않는다. 
a.sort()
print("(4)",a)

a.reverse()
print("(5)",a)
a = [6, 5, 4, 3, 2, 1]
   # 0  1  2  3  4  5
a.insert(0, 6) #append는 뒤에 박는거라면, 이건 0번째에 6을 끼워 넣어라. 
print("(6)",a)

a.remove(6) #del은 인덱스를 바탕으로 값을 삭제, remove는 값을 인수로 받아서 해당 값을 삭제
print("(7)",a)
# a = [5, 4, 3, 2]

print("(8)",a.pop()) #맨 마지막 요소를 반환하고 리스트에서 삭제한다. 

print("(9)",a)
# a = [5, 4, 3, 2] <-- [1, 0]

a.extend([1, 0]) # = a + [1,0] #리스트를 확장시킨다. 즉, 리스트에 이어서 붙여준다.
print("(10)",a)

a.append([1,0]) # a = [5, 4, 3, 2, [1, 0]] #리스트 자체를 리스트 내에 넣어준다.
print("(11)",a)